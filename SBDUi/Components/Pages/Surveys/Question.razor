@rendermode InteractiveServer

<EditForm Model="question" OnSubmit="SaveQuestion">

    <input type="text" @bind="question.QuestionText" placeholder="Enter question text" />
    <select @bind="question.QuestionType">
        <option value="">Select Question Type</option>
        <option value="MCQ">MCQ</option>
        <option value="Rating">Rating</option>
        <option value="Text">Text</option>
    </select>

    <button type="submit">Save Question</button>
</EditForm>

@if (question.QuestionType == "MCQ")
{
    <div>
        <h5>MCQ Options</h5>
        <button @onclick="AddOption">Add Option</button>
        @foreach (var option in optionsList.Select((value, index) => new { value, index }))
        {
            <input type="text" placeholder="Option @(option.index + 1)" @bind="optionsList[option.index]" />
        }
    </div>
}

@code {
    [Parameter] public string SurveyId { get; set; }
    private EntQues question = new EntQues();
    private List<string> optionsList = new List<string>();

    private async Task SaveQuestion()
    {
        if (string.IsNullOrEmpty(SurveyId))
        {
            return;
        }

        question.QuestionId = CRUD.GenerateUniqueId();
        question.SurveyId = SurveyId;
        await CRUD.CUDAsync(question, "sp_CreateQuestion");

        if (question.QuestionType == "MCQ")
        {
            await SaveOptions();
        }

        Console.WriteLine("Question Saved");
    }

    private void AddOption()
    {
        optionsList.Add("");
    }

    private async Task SaveOptions()
    {
        foreach (var option in optionsList)
        {
            var entOption = new EntOption
                {
                    OptionId = CRUD.GenerateUniqueId(),
                    QuestionId = question.QuestionId,
                    OptionText = option
                };

            await CRUD.CUDAsync(entOption, "sp_CreateOption");
        }
    }
}